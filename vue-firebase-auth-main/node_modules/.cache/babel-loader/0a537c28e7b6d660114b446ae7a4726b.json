{"ast":null,"code":"import { computed } from 'vue';\n/**\n * Get sticky column offset width\n */\n\nfunction useStickyOffsets(colWidthsRef, columnCountRef, directionRef) {\n  var stickyOffsets = computed(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n    var colWidths = colWidthsRef.value;\n    var columnCount = columnCountRef.value;\n    var direction = directionRef.value;\n\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0; // Right offset\n\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0; // Right offset\n\n        var _end = columnCount - start - 1;\n\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  });\n  return stickyOffsets;\n}\n\nexport default useStickyOffsets;","map":{"version":3,"names":["computed","useStickyOffsets","colWidthsRef","columnCountRef","directionRef","stickyOffsets","leftOffsets","rightOffsets","left","right","colWidths","value","columnCount","direction","start","end","_end"],"sources":["/Users/jasonti/Desktop/Tripper/vue/node_modules/ant-design-vue/es/vc-table/hooks/useStickyOffsets.js"],"sourcesContent":["import { computed } from 'vue';\n/**\n * Get sticky column offset width\n */\nfunction useStickyOffsets(colWidthsRef, columnCountRef, directionRef) {\n  var stickyOffsets = computed(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n    var colWidths = colWidthsRef.value;\n    var columnCount = columnCountRef.value;\n    var direction = directionRef.value;\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0;\n        // Right offset\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0;\n        // Right offset\n        var _end = columnCount - start - 1;\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  });\n  return stickyOffsets;\n}\nexport default useStickyOffsets;"],"mappings":"AAAA,SAASA,QAAT,QAAyB,KAAzB;AACA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwCC,cAAxC,EAAwDC,YAAxD,EAAsE;EACpE,IAAIC,aAAa,GAAGL,QAAQ,CAAC,YAAY;IACvC,IAAIM,WAAW,GAAG,EAAlB;IACA,IAAIC,YAAY,GAAG,EAAnB;IACA,IAAIC,IAAI,GAAG,CAAX;IACA,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,SAAS,GAAGR,YAAY,CAACS,KAA7B;IACA,IAAIC,WAAW,GAAGT,cAAc,CAACQ,KAAjC;IACA,IAAIE,SAAS,GAAGT,YAAY,CAACO,KAA7B;;IACA,KAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,WAA5B,EAAyCE,KAAK,IAAI,CAAlD,EAAqD;MACnD,IAAID,SAAS,KAAK,KAAlB,EAAyB;QACvB;QACAN,YAAY,CAACO,KAAD,CAAZ,GAAsBL,KAAtB;QACAA,KAAK,IAAIC,SAAS,CAACI,KAAD,CAAT,IAAoB,CAA7B,CAHuB,CAIvB;;QACA,IAAIC,GAAG,GAAGH,WAAW,GAAGE,KAAd,GAAsB,CAAhC;QACAR,WAAW,CAACS,GAAD,CAAX,GAAmBP,IAAnB;QACAA,IAAI,IAAIE,SAAS,CAACK,GAAD,CAAT,IAAkB,CAA1B;MACD,CARD,MAQO;QACL;QACAT,WAAW,CAACQ,KAAD,CAAX,GAAqBN,IAArB;QACAA,IAAI,IAAIE,SAAS,CAACI,KAAD,CAAT,IAAoB,CAA5B,CAHK,CAIL;;QACA,IAAIE,IAAI,GAAGJ,WAAW,GAAGE,KAAd,GAAsB,CAAjC;;QACAP,YAAY,CAACS,IAAD,CAAZ,GAAqBP,KAArB;QACAA,KAAK,IAAIC,SAAS,CAACM,IAAD,CAAT,IAAmB,CAA5B;MACD;IACF;;IACD,OAAO;MACLR,IAAI,EAAEF,WADD;MAELG,KAAK,EAAEF;IAFF,CAAP;EAID,CA/B2B,CAA5B;EAgCA,OAAOF,aAAP;AACD;;AACD,eAAeJ,gBAAf"},"metadata":{},"sourceType":"module"}