{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Check all \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_checkbox = _resolveComponent(\"a-checkbox\");\n\n  const _component_a_divider = _resolveComponent(\"a-divider\");\n\n  const _component_a_checkbox_group = _resolveComponent(\"a-checkbox-group\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_a_checkbox, {\n    checked: _ctx.checkAll,\n    \"onUpdate:checked\": _cache[0] || (_cache[0] = $event => _ctx.checkAll = $event),\n    indeterminate: _ctx.indeterminate,\n    onChange: _ctx.onCheckAllChange\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"checked\", \"indeterminate\", \"onChange\"])]), _createVNode(_component_a_divider), _createVNode(_component_a_checkbox_group, {\n    value: _ctx.checkedList,\n    \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.checkedList = $event),\n    options: _ctx.plainOptions\n  }, null, 8\n  /* PROPS */\n  , [\"value\", \"options\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;iDAMO;;;;;;;;;6DALHA,oBAQM,KARN,EAQM,IARN,EAQM,CAPJC,aAMaC,qBANb,EAMa;IALHC,OAAO,EAAEC,aAKN;4DALMA,gBAAQC,OAKd;IAJVC,aAAa,EAAEF,kBAIL;IAHVG,QAAM,EAAEH;EAGE,CANb;sBAIC,MAED;;;;GANA;;EAAA,2CAOI,CARN,GASAH,aAAaO,oBAAb,GACAP,aAAwEQ,2BAAxE,EAAwE;IAA9CC,KAAK,EAAEN,gBAAuC;0DAAvCA,mBAAWC,OAA4B;IAAzBM,OAAO,EAAEP;EAAgB,CAAxE;;EAAA","names":["_createElementVNode","_createVNode","_component_a_checkbox","checked","_ctx","$event","indeterminate","onChange","_component_a_divider","_component_a_checkbox_group","value","options"],"sourceRoot":"","sources":["/Users/zhen/Downloads/vue-firebase-auth-main/src/views/MainPage.vue"],"sourcesContent":["<template>\n    <div>\n      <a-checkbox\n        v-model:checked=\"checkAll\"\n        :indeterminate=\"indeterminate\"\n        @change=\"onCheckAllChange\"\n      >\n        Check all\n      </a-checkbox>\n    </div>\n    <a-divider />\n    <a-checkbox-group v-model:value=\"checkedList\" :options=\"plainOptions\" />\n  </template>\n  <script>\n  import { defineComponent, reactive, toRefs, watch } from 'vue';\n  const plainOptions = ['Apple', 'Pear', 'Orange'];\n  export default defineComponent({\n    setup() {\n      const state = reactive({\n        indeterminate: true,\n        checkAll: false,\n        checkedList: ['Apple', 'Orange'],\n      });\n      const onCheckAllChange = e => {\n        Object.assign(state, {\n          checkedList: e.target.checked ? plainOptions : [],\n          indeterminate: false,\n        });\n      };\n      watch(() => state.checkedList, val => {\n        state.indeterminate = !!val.length && val.length < plainOptions.length;\n        state.checkAll = val.length === plainOptions.length;\n      });\n      return {\n        ...toRefs(state),\n        plainOptions,\n        onCheckAllChange,\n      };\n    },\n  });\n  </script>"]},"metadata":{},"sourceType":"module"}