{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _excluded = [\"fixed\"];\nimport { createVNode as _createVNode } from \"vue\";\nimport { warning } from '../../vc-util/warning';\nimport { computed, watchEffect } from 'vue';\nimport { INTERNAL_COL_DEFINE } from '../utils/legacyUtil';\nimport { EXPAND_COLUMN } from '../constant';\n\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed; // Convert `fixed='true'` to `fixed='left'` instead\n\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\n\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n\n  var allFixRight = true;\n\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\n\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n        restProps = _objectWithoutProperties(column, _excluded); // Convert `fixed='left'` to `fixed='right'` instead\n\n\n    var parsedFixed = fixed;\n\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\n\n\nfunction useColumns(_ref, transformColumns) {\n  var prefixCls = _ref.prefixCls,\n      baseColumns = _ref.columns,\n      expandable = _ref.expandable,\n      expandedKeys = _ref.expandedKeys,\n      getRowKey = _ref.getRowKey,\n      onTriggerExpand = _ref.onTriggerExpand,\n      expandIcon = _ref.expandIcon,\n      rowExpandable = _ref.rowExpandable,\n      expandIconColumnIndex = _ref.expandIconColumnIndex,\n      direction = _ref.direction,\n      expandRowByClick = _ref.expandRowByClick,\n      expandColumnWidth = _ref.expandColumnWidth,\n      expandFixed = _ref.expandFixed; // Add expand column\n\n  var withExpandColumns = computed(function () {\n    if (expandable.value) {\n      var _expandColumn;\n\n      var cloneColumns = baseColumns.value.slice(); // >>> Warning if use `expandIconColumnIndex`\n\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex.value >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      } // >>> Insert expand column if not exist\n\n\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex.value || 0;\n\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      } // >>> Deduplicate additional expand column\n\n\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      }); // >>> Check if expand column need to fixed\n\n      var prevColumn = baseColumns.value[expandColumnIndex];\n      var fixedColumn;\n\n      if ((expandFixed.value === 'left' || expandFixed.value) && !expandIconColumnIndex.value) {\n        fixedColumn = 'left';\n      } else if ((expandFixed.value === 'right' || expandFixed.value) && expandIconColumnIndex.value === baseColumns.value.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n\n      var expandedKeysValue = expandedKeys.value;\n      var rowExpandableValue = rowExpandable.value;\n      var expandIconValue = expandIcon.value;\n      var prefixClsValue = prefixCls.value;\n      var expandRowByClickValue = expandRowByClick.value; // >>> Create expandable column\n\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        class: \"\".concat(prefixCls.value, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", ''), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"class\", \"\".concat(prefixCls.value, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", expandColumnWidth.value), _defineProperty(_expandColumn, \"customRender\", function customRender(_ref2) {\n        var record = _ref2.record,\n            index = _ref2.index;\n        var rowKey = getRowKey.value(record, index);\n        var expanded = expandedKeysValue.has(rowKey);\n        var recordExpandable = rowExpandableValue ? rowExpandableValue(record) : true;\n        var icon = expandIconValue({\n          prefixCls: prefixClsValue,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n\n        if (expandRowByClickValue) {\n          return _createVNode(\"span\", {\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, [icon]);\n        }\n\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n\n    if (process.env.NODE_ENV !== 'production' && baseColumns.value.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n\n    return baseColumns.value.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  });\n  var mergedColumns = computed(function () {\n    var finalColumns = withExpandColumns.value;\n\n    if (transformColumns.value) {\n      finalColumns = transformColumns.value(finalColumns);\n    } // Always provides at least one column for table display\n\n\n    if (!finalColumns.length) {\n      finalColumns = [{\n        customRender: function customRender() {\n          return null;\n        }\n      }];\n    }\n\n    return finalColumns;\n  });\n  var flattenColumns = computed(function () {\n    if (direction.value === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns.value));\n    }\n\n    return flatColumns(mergedColumns.value);\n  }); // Only check out of production since it's waste for each render\n\n  if (process.env.NODE_ENV !== 'production') {\n    watchEffect(function () {\n      setTimeout(function () {\n        warningFixed(flattenColumns.value);\n      });\n    });\n  }\n\n  return [mergedColumns, flattenColumns];\n}\n\nexport default useColumns;","map":{"version":3,"names":["_defineProperty","_objectWithoutProperties","_objectSpread","_toConsumableArray","_excluded","createVNode","_createVNode","warning","computed","watchEffect","INTERNAL_COL_DEFINE","EXPAND_COLUMN","flatColumns","columns","reduce","list","column","fixed","parsedFixed","subColumns","children","length","concat","map","subColum","warningFixed","flattenColumns","allFixLeft","i","col","allFixRight","_i","_col","revertForRtl","restProps","useColumns","_ref","transformColumns","prefixCls","baseColumns","expandable","expandedKeys","getRowKey","onTriggerExpand","expandIcon","rowExpandable","expandIconColumnIndex","direction","expandRowByClick","expandColumnWidth","expandFixed","withExpandColumns","value","_expandColumn","cloneColumns","slice","process","env","NODE_ENV","includes","expandColIndex","splice","filter","c","expandColumnIndex","indexOf","index","prevColumn","fixedColumn","expandedKeysValue","rowExpandableValue","expandIconValue","prefixClsValue","expandRowByClickValue","expandColumn","class","columnType","customRender","_ref2","record","rowKey","expanded","has","recordExpandable","icon","onExpand","onClick","e","stopPropagation","mergedColumns","finalColumns","setTimeout"],"sources":["/Users/jasonti/Desktop/Tripper/vue/node_modules/ant-design-vue/es/vc-table/hooks/useColumns.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _excluded = [\"fixed\"];\nimport { createVNode as _createVNode } from \"vue\";\nimport { warning } from '../../vc-util/warning';\nimport { computed, watchEffect } from 'vue';\nimport { INTERNAL_COL_DEFINE } from '../utils/legacyUtil';\nimport { EXPAND_COLUMN } from '../constant';\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed;\n    // Convert `fixed='true'` to `fixed='left'` instead\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n  var allFixRight = true;\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n      restProps = _objectWithoutProperties(column, _excluded);\n    // Convert `fixed='left'` to `fixed='right'` instead\n    var parsedFixed = fixed;\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\nfunction useColumns(_ref, transformColumns) {\n  var prefixCls = _ref.prefixCls,\n    baseColumns = _ref.columns,\n    expandable = _ref.expandable,\n    expandedKeys = _ref.expandedKeys,\n    getRowKey = _ref.getRowKey,\n    onTriggerExpand = _ref.onTriggerExpand,\n    expandIcon = _ref.expandIcon,\n    rowExpandable = _ref.rowExpandable,\n    expandIconColumnIndex = _ref.expandIconColumnIndex,\n    direction = _ref.direction,\n    expandRowByClick = _ref.expandRowByClick,\n    expandColumnWidth = _ref.expandColumnWidth,\n    expandFixed = _ref.expandFixed;\n  // Add expand column\n  var withExpandColumns = computed(function () {\n    if (expandable.value) {\n      var _expandColumn;\n      var cloneColumns = baseColumns.value.slice();\n      // >>> Warning if use `expandIconColumnIndex`\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex.value >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      }\n      // >>> Insert expand column if not exist\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex.value || 0;\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      }\n      // >>> Deduplicate additional expand column\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      });\n      // >>> Check if expand column need to fixed\n      var prevColumn = baseColumns.value[expandColumnIndex];\n      var fixedColumn;\n      if ((expandFixed.value === 'left' || expandFixed.value) && !expandIconColumnIndex.value) {\n        fixedColumn = 'left';\n      } else if ((expandFixed.value === 'right' || expandFixed.value) && expandIconColumnIndex.value === baseColumns.value.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n      var expandedKeysValue = expandedKeys.value;\n      var rowExpandableValue = rowExpandable.value;\n      var expandIconValue = expandIcon.value;\n      var prefixClsValue = prefixCls.value;\n      var expandRowByClickValue = expandRowByClick.value;\n      // >>> Create expandable column\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        class: \"\".concat(prefixCls.value, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", ''), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"class\", \"\".concat(prefixCls.value, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", expandColumnWidth.value), _defineProperty(_expandColumn, \"customRender\", function customRender(_ref2) {\n        var record = _ref2.record,\n          index = _ref2.index;\n        var rowKey = getRowKey.value(record, index);\n        var expanded = expandedKeysValue.has(rowKey);\n        var recordExpandable = rowExpandableValue ? rowExpandableValue(record) : true;\n        var icon = expandIconValue({\n          prefixCls: prefixClsValue,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n        if (expandRowByClickValue) {\n          return _createVNode(\"span\", {\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, [icon]);\n        }\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n    if (process.env.NODE_ENV !== 'production' && baseColumns.value.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n    return baseColumns.value.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  });\n  var mergedColumns = computed(function () {\n    var finalColumns = withExpandColumns.value;\n    if (transformColumns.value) {\n      finalColumns = transformColumns.value(finalColumns);\n    }\n    // Always provides at least one column for table display\n    if (!finalColumns.length) {\n      finalColumns = [{\n        customRender: function customRender() {\n          return null;\n        }\n      }];\n    }\n    return finalColumns;\n  });\n  var flattenColumns = computed(function () {\n    if (direction.value === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns.value));\n    }\n    return flatColumns(mergedColumns.value);\n  });\n  // Only check out of production since it's waste for each render\n  if (process.env.NODE_ENV !== 'production') {\n    watchEffect(function () {\n      setTimeout(function () {\n        warningFixed(flattenColumns.value);\n      });\n    });\n  }\n  return [mergedColumns, flattenColumns];\n}\nexport default useColumns;"],"mappings":"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"},"metadata":{},"sourceType":"module"}