{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { defineComponent, onBeforeUnmount, onMounted, onUpdated, ref } from 'vue';\nimport omit from '../_util/omit';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport Statistic, { statisticProps } from './Statistic';\nimport { formatCountdown as formatCD } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\n\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\n\nexport var countdownProps = function countdownProps() {\n  return _objectSpread(_objectSpread({}, statisticProps()), {}, {\n    value: [Number, String, Object],\n    format: String,\n    onFinish: Function,\n    onChange: Function\n  });\n};\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'AStatisticCountdown',\n  props: initDefaultProps(countdownProps(), {\n    format: 'HH:mm:ss'\n  }),\n  // emits: ['finish', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n    var countdownId = ref();\n    var statistic = ref();\n\n    var syncTimer = function syncTimer() {\n      var value = props.value;\n      var timestamp = getTime(value);\n\n      if (timestamp >= Date.now()) {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n\n    var startTimer = function startTimer() {\n      if (countdownId.value) return;\n      var timestamp = getTime(props.value);\n      countdownId.value = setInterval(function () {\n        statistic.value.$forceUpdate();\n\n        if (timestamp > Date.now()) {\n          emit('change', timestamp - Date.now());\n        }\n\n        syncTimer();\n      }, REFRESH_INTERVAL);\n    };\n\n    var stopTimer = function stopTimer() {\n      var value = props.value;\n\n      if (countdownId.value) {\n        clearInterval(countdownId.value);\n        countdownId.value = undefined;\n        var timestamp = getTime(value);\n\n        if (timestamp < Date.now()) {\n          emit('finish');\n        }\n      }\n    };\n\n    var formatCountdown = function formatCountdown(_ref2) {\n      var value = _ref2.value,\n          config = _ref2.config;\n      var format = props.format;\n      return formatCD(value, _objectSpread(_objectSpread({}, config), {}, {\n        format: format\n      }));\n    };\n\n    var valueRenderHtml = function valueRenderHtml(node) {\n      return node;\n    };\n\n    onMounted(function () {\n      syncTimer();\n    });\n    onUpdated(function () {\n      syncTimer();\n    });\n    onBeforeUnmount(function () {\n      stopTimer();\n    });\n    return function () {\n      var value = props.value;\n      return _createVNode(Statistic, _objectSpread({\n        \"ref\": statistic\n      }, _objectSpread(_objectSpread({}, omit(props, ['onFinish', 'onChange'])), {}, {\n        value: value,\n        valueRender: valueRenderHtml,\n        formatter: formatCountdown\n      })), slots);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","resolveDirective","_resolveDirective","defineComponent","onBeforeUnmount","onMounted","onUpdated","ref","omit","initDefaultProps","Statistic","statisticProps","formatCountdown","formatCD","REFRESH_INTERVAL","getTime","value","Date","countdownProps","Number","String","Object","format","onFinish","Function","onChange","compatConfig","MODE","name","props","setup","_ref","emit","slots","countdownId","statistic","syncTimer","timestamp","now","startTimer","stopTimer","setInterval","$forceUpdate","clearInterval","undefined","_ref2","config","valueRenderHtml","node","valueRender","formatter"],"sources":["/Users/jasonti/Desktop/Tripper/vue/node_modules/ant-design-vue/es/statistic/Countdown.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { defineComponent, onBeforeUnmount, onMounted, onUpdated, ref } from 'vue';\nimport omit from '../_util/omit';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport Statistic, { statisticProps } from './Statistic';\nimport { formatCountdown as formatCD } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\nexport var countdownProps = function countdownProps() {\n  return _objectSpread(_objectSpread({}, statisticProps()), {}, {\n    value: [Number, String, Object],\n    format: String,\n    onFinish: Function,\n    onChange: Function\n  });\n};\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'AStatisticCountdown',\n  props: initDefaultProps(countdownProps(), {\n    format: 'HH:mm:ss'\n  }),\n  // emits: ['finish', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var countdownId = ref();\n    var statistic = ref();\n    var syncTimer = function syncTimer() {\n      var value = props.value;\n      var timestamp = getTime(value);\n      if (timestamp >= Date.now()) {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n    var startTimer = function startTimer() {\n      if (countdownId.value) return;\n      var timestamp = getTime(props.value);\n      countdownId.value = setInterval(function () {\n        statistic.value.$forceUpdate();\n        if (timestamp > Date.now()) {\n          emit('change', timestamp - Date.now());\n        }\n        syncTimer();\n      }, REFRESH_INTERVAL);\n    };\n    var stopTimer = function stopTimer() {\n      var value = props.value;\n      if (countdownId.value) {\n        clearInterval(countdownId.value);\n        countdownId.value = undefined;\n        var timestamp = getTime(value);\n        if (timestamp < Date.now()) {\n          emit('finish');\n        }\n      }\n    };\n    var formatCountdown = function formatCountdown(_ref2) {\n      var value = _ref2.value,\n        config = _ref2.config;\n      var format = props.format;\n      return formatCD(value, _objectSpread(_objectSpread({}, config), {}, {\n        format: format\n      }));\n    };\n    var valueRenderHtml = function valueRenderHtml(node) {\n      return node;\n    };\n    onMounted(function () {\n      syncTimer();\n    });\n    onUpdated(function () {\n      syncTimer();\n    });\n    onBeforeUnmount(function () {\n      stopTimer();\n    });\n    return function () {\n      var value = props.value;\n      return _createVNode(Statistic, _objectSpread({\n        \"ref\": statistic\n      }, _objectSpread(_objectSpread({}, omit(props, ['onFinish', 'onChange'])), {}, {\n        value: value,\n        valueRender: valueRenderHtml,\n        formatter: formatCountdown\n      })), slots);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}