{"ast":null,"code":"import PlanVue from \"./PlanView.vue\";\nimport { defineComponent, reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nexport default defineComponent({\n  components: {\n    PlanVue\n  },\n\n  setup() {\n    const formItemLayout = {// layout options\n    };\n    const config = {// form validation rules\n    };\n    const rangeConfig = {// form validation rules for range picker\n    };\n    const formState = reactive({});\n    const router = useRouter();\n\n    const onFinish = async values => {\n      console.log(\"Success:\", values, formState); // create a JSON object from the form data\n\n      const formData = {\n        destination: formState.destination,\n        rangeTimePicker: formState.rangeTimePicker\n      };\n\n      try {\n        // send a POST request to the server with the form data\n        const response = await axios.post(\"http://localhost:8080/submit-form\", formData);\n        console.log(response.data); // response from the server\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const onFinishFailed = errorInfo => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    const plan = async () => {\n      try {\n        // Trigger the onFinish function to submit the form data\n        await onFinish(); // navigate to the /plan page\n\n        router.push(\"/plan\");\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    return {\n      formState,\n      onFinish,\n      onFinishFailed,\n      formItemLayout,\n      config,\n      rangeConfig,\n      plan,\n      response\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAuCA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,KAA1C;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAeH,eAAe,CAAC;EAC7BI,UAAU,EAAE;IACVL;EADU,CADiB;;EAI7BM,KAAK,GAAG;IACN,MAAMC,cAAa,GAAI,CACrB;IADqB,CAAvB;IAGA,MAAMC,MAAK,GAAI,CACb;IADa,CAAf;IAGA,MAAMC,WAAU,GAAI,CAClB;IADkB,CAApB;IAGA,MAAMC,SAAQ,GAAIR,QAAQ,CAAC,EAAD,CAA1B;IACA,MAAMS,MAAK,GAAIR,SAAS,EAAxB;;IAEA,MAAMS,QAAO,GAAI,MAAOC,MAAP,IAAkB;MACjCC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB,EAAgCH,SAAhC,EADiC,CAGjC;;MACA,MAAMM,QAAO,GAAI;QACfC,WAAW,EAAEP,SAAS,CAACO,WADR;QAEfC,eAAe,EAAER,SAAS,CAACQ;MAFZ,CAAjB;;MAKA,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAN,CACrB,mCADqB,EAErBJ,QAFqB,CAAvB;QAKAF,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACE,IAArB,EAPE,CAO0B;MAE9B,CATA,CASE,OAAOC,KAAP,EAAc;QACdR,OAAO,CAACQ,KAAR,CAAcA,KAAd;MACF;IACD,CArBD;;IAuBA,MAAMC,cAAa,GAAKC,SAAD,IAAe;MACpCV,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,SAAvB;IACD,CAFD;;IAIA,MAAMC,IAAG,GAAI,YAAY;MACvB,IAAI;QACF;QACA,MAAMb,QAAQ,EAAd,CAFE,CAGF;;QACAD,MAAM,CAACe,IAAP,CAAY,OAAZ;MACF,CALA,CAKE,OAAOJ,KAAP,EAAc;QACdR,OAAO,CAACQ,KAAR,CAAcA,KAAd;MACF;IACD,CATD;;IAWA,OAAO;MACLZ,SADK;MAELE,QAFK;MAGLW,cAHK;MAILhB,cAJK;MAKLC,MALK;MAMLC,WANK;MAOLgB,IAPK;MAQLN;IARK,CAAP;EAUD;;AAjE4B,CAAD,CAA9B","names":["PlanVue","defineComponent","reactive","useRouter","axios","components","setup","formItemLayout","config","rangeConfig","formState","router","onFinish","values","console","log","formData","destination","rangeTimePicker","response","post","data","error","onFinishFailed","errorInfo","plan","push"],"sourceRoot":"","sources":["/Users/jasonti/Project/Tripper/front/src/views/MainPage.vue"],"sourcesContent":["<template>\n  <a-form\n    :model=\"formState\"\n    name=\"time_related_controls\"\n    :form-item-layout=\"formItemLayout\"\n    @finish=\"onFinish\"\n    @finish-failed=\"onFinishFailed\"\n  >\n    <a-form-item\n      name=\"rangeTimePicker\"\n      label=\"RangePicker[showTime]\"\n      :rules=\"rangeConfig.rules\"\n    >\n      <a-range-picker\n        v-model:value=\"formState.rangeTimePicker\"\n        show-time\n        format=\"YYYY-MM-DD HH\"\n        value-format=\"YYYY-MM-DD HH\"\n      />\n    </a-form-item>\n    <a-form-item name=\"destination\" label=\"destination\" :rules=\"config.rules\">\n      <a-input v-model:value=\"formState.destination\" />\n    </a-form-item>\n\n    <a-form-item\n      :wrapper-col=\"{\n        xs: { span: 24, offset: 0 },\n        sm: { span: 16, offset: 8 },\n      }\"\n    >\n      <a-button type=\"primary\" html-type=\"submit\" @click.prevent=\"plan\">\n        Submit\n      </a-button>\n    </a-form-item>\n  </a-form>\n  <child-component :responseData=\"response\"></child-component>\n</template>\n\n<script>\nimport PlanVue from \"./PlanView.vue\";\nimport { defineComponent, reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\n\nexport default defineComponent({\n  components: {\n    PlanVue,\n  },\n  setup() {\n    const formItemLayout = {\n      // layout options\n    };\n    const config = {\n      // form validation rules\n    };\n    const rangeConfig = {\n      // form validation rules for range picker\n    };\n    const formState = reactive({});\n    const router = useRouter();\n\n    const onFinish = async (values) => {\n      console.log(\"Success:\", values, formState);\n\n      // create a JSON object from the form data\n      const formData = {\n        destination: formState.destination,\n        rangeTimePicker: formState.rangeTimePicker,\n      };\n\n      try {\n        // send a POST request to the server with the form data\n        const response = await axios.post(\n          \"http://localhost:8080/submit-form\",\n          formData\n        );\n\n        console.log(response.data); // response from the server\n\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    const plan = async () => {\n      try {\n        // Trigger the onFinish function to submit the form data\n        await onFinish();\n        // navigate to the /plan page\n        router.push(\"/plan\");\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    return {\n      formState,\n      onFinish,\n      onFinishFailed,\n      formItemLayout,\n      config,\n      rangeConfig,\n      plan,\n      response,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}